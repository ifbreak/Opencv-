//案例一
#include<opencv2/core/core.hpp>
#include<opencv2/highgui/highgui.hpp>
using namespace cv;

int main()
{
	Mat girl = imread("C:/Users/长风破浪/Desktop/img/cat.png");
	namedWindow("[1]动漫图");
	imshow("[1]动漫图", girl);
	Mat image = imread("C:/Users/长风破浪/Desktop/img/bilibili.png");
	Mat logo = imread("C:/Users/长风破浪/Desktop/img/2023-03-02 151439.png");
	namedWindow("[2]原画图");
	imshow("[2]原画图", image);
	namedWindow("[3]logo图");
	imshow("[3]logo图", logo);
	Mat imageROI;
	imageROI = image(Rect(800, 350, logo.cols, logo.rows));
	addWeighted(imageROI, 0.5, logo, 0.3, 0., imageROI);
	namedWindow("[4]原图+logo图");
	imshow("[4]原画+logo图",image);
	imwrite("由imwrite生成的图片.png",image);
	waitKey();
	return 0;
}

//案例二
#include<opencv2/core/core.hpp>
#include<opencv2/highgui/highgui.hpp>
using namespace cv;

#define WINDOW_NAME "【线性混合实例】"
const int g_nMaxAlphaValue = 100;
int g_nAlphaValueSlider;
double g_dAlphaValue;
double g_dBetaValue;

Mat g_srcImage1;
Mat g_srcImage2;
Mat g_dstImage;

void on_Trackbar(int, void*)
{
	g_dAlphaValue = (double)g_nAlphaValueSlider / g_nMaxAlphaValue;
	g_dBetaValue = (1.0 - g_dAlphaValue);

	addWeighted(g_srcImage1, g_dAlphaValue, g_srcImage2, g_dBetaValue, 0.0, g_dstImage);

	imshow(WINDOW_NAME, g_dstImage);
}

int main(int argc, char** argv)
{
	g_srcImage1 = imread("C:/Users/长风破浪/Desktop/img/bilibili.png");
	g_srcImage2 = imread("C:/Users/长风破浪/Desktop/img/cat(1).png");
	if (!g_srcImage1.data) {
		printf("读取第一幅图片错误，请确定目录下是否有imread函数指定图片存在~！\n");
		return -1;
	}
	if (!g_srcImage2.data) {
		printf("读取第二幅图片错误，请确定目录下是否有imread函数指定图片存在~！\n");
		return -1;
	}

	g_nAlphaValueSlider = 70;

	namedWindow(WINDOW_NAME, 1);

	char TrackbarName[50] = {"案例二"};
	printf(TrackbarName, "透明值%d", g_nMaxAlphaValue);

	createTrackbar(TrackbarName, WINDOW_NAME, &g_nAlphaValueSlider, g_nMaxAlphaValue, on_Trackbar);

	on_Trackbar(g_nAlphaValueSlider, 0);

	waitKey(0);
	return 0;
}
